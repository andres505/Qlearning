# -*- coding: utf-8 -*-
"""Qlearning

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10c6LHV-rZ1-_ASZk7WX5J9r21z1KsHH3
"""

import numpy as np
import random
import matplotlib.pyplot as plt

gamma = 0.8
reward = np.array([[-1,-1,-1,-1,0,-1],[-1,-1,-1,0,-1,100],[-1,-1,-1,0,-1,-1],[-1,0,0,-1,0,-1],[0,-1,-1,0,-1,100],[-1,0,-1,-1,0,100]])

qmatrix=np.zeros(reward.shape)

tran_matrix = np.array([[-1,-1,-1,-1,4,-1],[-1,-1,-1,3,-1,5],[-1,-1,-1,3,-1,-1],[-1,1,2,-1,4,-1],[0,-1,-1,3,-1,5],[-1,1,-1,-1,4,5]])

accion_matrix=[[4],[3,5],[3],[1,2,4],[0,3,5],[1,4,5]]

secuencia=[]
for itera in range(100):
  estado_inicio = random.choice(list(range(0,reward.shape[0])))
  estado_actual = estado_inicio
  secuencia.append(estado_inicio)
  while (estado_actual != 5):
    accion= random.choice(accion_matrix[estado_actual])
    estado_siguiente = tran_matrix[estado_actual][accion]
    reward_siguiente = []
    for accion_siguiente in accion_matrix[estado_siguiente]:
      reward_siguiente.append(qmatrix[estado_siguiente][accion_siguiente])
    qestado = reward[estado_actual][accion]+gamma*max(reward_siguiente)#actualizacion de la matriz q
    qmatrix[estado_actual][accion]=qestado #memoria del ente
    estado_actual=estado_siguiente
    print(qmatrix)

